using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using TurboDSLR.Framework.Exif;

namespace TurboDSLR.Framework.ExifReader
{
    internal sealed class ExifSupportedTags  : Hashtable
    {
        public ExifSupportedTags()
        {
            this.Add(0x100, new ExifTag(0x100, "ImageWidth", "Image width"));
            this.Add(0x101, new ExifTag(0x101, "ImageHeight", "Image height"));
            this.Add(0x0, new ExifTag(0x0, "GPSVersionID", "GPS tag version"));
            this.Add(0x5, new ExifTag(0x5, "GPSAltitudeRef", "Altitude reference"));
            this.Add(0x111, new ExifTag(0x111, "StripOffsets", "Image data location"));
            this.Add(0x116, new ExifTag(0x116, "RowsPerStrip", "Number of rows per strip"));
            this.Add(0x117, new ExifTag(0x117, "StripByteCounts", "Bytes per compressed strip"));
            this.Add(0xA002, new ExifTag(0xA002, "PixelXDimension", "Valid image width"));
            this.Add(0xA003, new ExifTag(0xA003, "PixelYDimension", "Valid image height"));
            this.Add(0x102, new ExifTag(0x102, "BitsPerSample", "Number of bits per component"));
            this.Add(0x103, new ExifTag(0x103, "Compression", "Compression scheme"));
            this.Add(0x106, new ExifTag(0x106, "PhotometricInterpretation", "Pixel composition"));
            this.Add(0x112, new ExifTag(0x112, "Orientation", "Orientation of image"));
            this.Add(0x115, new ExifTag(0x115, "SamplesPerPixel", "Number of components"));
            this.Add(0x11C, new ExifTag(0x11C, "PlanarConfiguration", "Image data arrangement"));
            this.Add(0x212, new ExifTag(0x212, "YCbCrSubSampling", "Subsampling ratio of Y to C"));
            this.Add(0x213, new ExifTag(0x213, "YCbCrPositioning", "Y and C positioning"));
            this.Add(0x128, new ExifTag(0x128, "ResolutionUnit", "Unit of X and Y resolution"));
            this.Add(0x12D, new ExifTag(0x12D, "TransferFunction", "Transfer function"));
            this.Add(0xA001, new ExifTag(0xA001, "ColorSpace", "Color space information"));
            this.Add(0x8822, new ExifTag(0x8822, "ExposureProgram", "Exposure program"));
            this.Add(0x8827, new ExifTag(0x8827, "ISOSpeedRatings", "ISO speed rating"));
            this.Add(0x9207, new ExifTag(0x9207, "MeteringMode", "Metering mode"));
            this.Add(0x9208, new ExifTag(0x9208, "LightSource", "Light source"));
            this.Add(0x9209, new ExifTag(0x9209, "Flash", "Flash"));
            this.Add(0x9214, new ExifTag(0x9214, "SubjectArea", "Subject area"));
            this.Add(0xA210, new ExifTag(0xA210, "FocalPlaneResolutionUnit", "Focal plane resolution unit"));
            this.Add(0xA214, new ExifTag(0xA214, "SubjectLocation", "Subject location"));
            this.Add(0xA217, new ExifTag(0xA217, "SensingMethod", "Sensing method"));
            this.Add(0xA401, new ExifTag(0xA401, "CustomRendered", "Custom image processing"));
            this.Add(0xA402, new ExifTag(0xA402, "ExposureMode", "Exposure mode"));
            this.Add(0xA403, new ExifTag(0xA403, "WhiteBalance", "White balance"));
            this.Add(0xA405, new ExifTag(0xA405, "FocalLengthIn35mmFilm", "Focal length in 35 mm film"));
            this.Add(0xA406, new ExifTag(0xA406, "SceneCaptureType", "Scene capture type"));
            this.Add(0xA408, new ExifTag(0xA408, "Contrast", "Contrast"));
            this.Add(0xA409, new ExifTag(0xA409, "Saturation", "Saturation"));
            this.Add(0xA40A, new ExifTag(0xA40A, "Sharpness", "Sharpness"));
            this.Add(0xA40C, new ExifTag(0xA40C, "SubjectDistanceRange", "Subject distance range"));
            this.Add(0x1E, new ExifTag(0x1E, "GPSDifferential", "GPS differential correction"));
            this.Add(0x9201, new ExifTag(0x9201, "ShutterSpeedValue", "Shutter speed"));
            this.Add(0x9203, new ExifTag(0x9203, "BrightnessValue", "Brightness"));
            this.Add(0x9204, new ExifTag(0x9204, "ExposureBiasValue", "Exposure bias"));
            this.Add(0x201, new ExifTag(0x201, "JPEGInterchangeFormat", "Offset to JPEG SOI"));
            this.Add(0x202, new ExifTag(0x202, "JPEGInterchangeFormatLength", "Bytes of JPEG data"));
            this.Add(0x11A, new ExifTag(0x11A, "XResolution", "Image resolution in width direction"));
            this.Add(0x11B, new ExifTag(0x11B, "YResolution", "Image resolution in height direction"));
            this.Add(0x13E, new ExifTag(0x13E, "WhitePoint", "White point chromaticity"));
            this.Add(0x13F, new ExifTag(0x13F, "PrimaryChromaticities", "Chromaticities of primaries"));
            this.Add(0x211, new ExifTag(0x211, "YCbCrCoefficients", "Color space transformation matrix coefficients"));
            this.Add(0x214, new ExifTag(0x214, "ReferenceBlackWhite", "Pair of black and white reference values"));
            this.Add(0x9102, new ExifTag(0x9102, "CompressedBitsPerPixel", "Image compression mode"));
            this.Add(0x829A, new ExifTag(0x829A, "ExposureTime", "Exposure time"));
            this.Add(0x829D, new ExifTag(0x829D, "FNumber", "F number"));
            this.Add(0x9202, new ExifTag(0x9202, "ApertureValue", "Aperture"));
            this.Add(0x9205, new ExifTag(0x9205, "MaxApertureValue", "Maximum lens aperture"));
            this.Add(0x9206, new ExifTag(0x9206, "SubjectDistance", "Subject distance"));
            this.Add(0x920A, new ExifTag(0x920A, "FocalLength", "Lens focal length"));
            this.Add(0xA20B, new ExifTag(0xA20B, "FlashEnergy", "Flash energy"));
            this.Add(0xA20E, new ExifTag(0xA20E, "FocalPlaneXResolution", "Focal plane X resolution"));
            this.Add(0xA20F, new ExifTag(0xA20F, "FocalPlaneYResolution", "Focal plane Y resolution"));
            this.Add(0xA215, new ExifTag(0xA215, "ExposureIndex", "Exposure index"));
            this.Add(0xA404, new ExifTag(0xA404, "DigitalZoomRatio", "Digital zoom ratio"));
            this.Add(0xA407, new ExifTag(0xA407, "GainControl", "Gain control"));
            this.Add(0x2, new ExifTag(0x2, "GPSLatitude", "Latitude"));
            this.Add(0x4, new ExifTag(0x4, "GPSLongitude", "Longitude"));
            this.Add(0x6, new ExifTag(0x6, "GPSAltitude", "Altitude"));
            this.Add(0x7, new ExifTag(0x7, "GPSTimeStamp", "GPS time (atomic clock)"));
            this.Add(0xB, new ExifTag(0xB, "GPSDOP", "Measurement precision"));
            this.Add(0xD, new ExifTag(0xD, "GPSSpeed", "Speed of GPS receiver"));
            this.Add(0xF, new ExifTag(0xF, "GPSTrack", "Direction of movement"));
            this.Add(0x11, new ExifTag(0x11, "GPSImgDirection", "Direction of image"));
            this.Add(0x14, new ExifTag(0x14, "GPSDestLatitude", "Latitude of destination"));
            this.Add(0x16, new ExifTag(0x16, "GPSDestLongitude", "Longitude of destination"));
            this.Add(0x18, new ExifTag(0x18, "GPSDestBearing", "Bearing of destination"));
            this.Add(0x1A, new ExifTag(0x1A, "GPSDestDistance", "Distance to destination"));
            this.Add(0x132, new ExifTag(0x132, "DateTime", "File change date and time"));
            this.Add(0x10E, new ExifTag(0x10E, "ImageDescription", "Image title"));
            this.Add(0x10F, new ExifTag(0x10F, "Make", "Image input equipment manufacturer"));
            this.Add(0x110, new ExifTag(0x110, "Model", "Image input equipment model"));
            this.Add(0x131, new ExifTag(0x131, "Software", "Software used"));
            this.Add(0x13B, new ExifTag(0x13B, "Artist", "Person who created the image"));
            this.Add(0x8298, new ExifTag(0x8298, "Copyright", "Copyright holder"));
            this.Add(0xA004, new ExifTag(0xA004, "RelatedSoundFile", "Related audio file"));
            this.Add(0x9003, new ExifTag(0x9003, "DateTimeOriginal", "Date and time of original data generation"));
            this.Add(0x9004, new ExifTag(0x9004, "DateTimeDigitized", "Date and time of digital data generation"));
            this.Add(0x9290, new ExifTag(0x9290, "SubSecTime", "DateTime subseconds"));
            this.Add(0x9291, new ExifTag(0x9291, "SubSecTimeOriginal", "DateTimeOriginal subseconds"));
            this.Add(0x9292, new ExifTag(0x9292, "SubSecTimeDigitized", "DateTimeDigitized subseconds"));
            this.Add(0xA420, new ExifTag(0xA420, "ImageUniqueID", "Unique image ID"));
            this.Add(0x8824, new ExifTag(0x8824, "SpectralSensitivity", "Spectral sensitivity"));
            this.Add(0x1, new ExifTag(0x1, "GPSLatitudeRef", "North or South Latitude"));
            this.Add(0x3, new ExifTag(0x3, "GPSLongitudeRef", "East or West Longitude"));
            this.Add(0x8, new ExifTag(0x8, "GPSSatellites", "GPS satellites used for measurement"));
            this.Add(0x9, new ExifTag(0x9, "GPSStatus", "GPS receiver status"));
            this.Add(0xA, new ExifTag(0xA, "GPSMeasureMode", "GPS measurement mode"));
            this.Add(0xC, new ExifTag(0xC, "GPSSpeedRef", "Speed unit"));
            this.Add(0xE, new ExifTag(0xE, "GPSTrackRef", "Reference for direction of movement"));
            this.Add(0x10, new ExifTag(0x10, "GPSImgDirectionRef", "Reference for direction of image"));
            this.Add(0x12, new ExifTag(0x12, "GPSMapDatum", "Geodetic survey data used"));
            this.Add(0x13, new ExifTag(0x13, "GPSDestLatitudeRef", "Reference for latitude of destination"));
            this.Add(0x15, new ExifTag(0x15, "GPSDestLongitudeRef", "Reference for longitude of destination"));
            this.Add(0x17, new ExifTag(0x17, "GPSDestBearingRef", "Reference for bearing of destination"));
            this.Add(0x19, new ExifTag(0x19, "GPSDestDistanceRef", "Reference for distance to destination"));
            this.Add(0x1D, new ExifTag(0x1D, "GPSDateStamp", "GPS date"));
            this.Add(0x8828, new ExifTag(0x8828, "OECF", "Optoelectric conversion factor"));
            this.Add(0xA20C, new ExifTag(0xA20C, "SpatialFrequencyResponse", "Spatial frequency response"));
            this.Add(0xA300, new ExifTag(0xA300, "FileSource", "File source"));
            this.Add(0xA301, new ExifTag(0xA301, "SceneType", "Scene type"));
            this.Add(0xA302, new ExifTag(0xA302, "CFAPattern", "CFA pattern"));
            this.Add(0xA40B, new ExifTag(0xA40B, "DeviceSettingDescription", "Device settings description"));
            this.Add(0x9000, new ExifTag(0x9000, "ExifVersion", "Exif version"));
            this.Add(0xA000, new ExifTag(0xA000, "FlashpixVersion", "Supported Flashpix version"));
            this.Add(0x9101, new ExifTag(0x9101, "ComponentsConfiguration", "Meaning of each component"));
            this.Add(0x927C, new ExifTag(0x927C, "MakerNote", "Manufacturer notes"));
            this.Add(0x9286, new ExifTag(0x9286, "UserComment", "User comments"));
            this.Add(0x1B, new ExifTag(0x1B, "GPSProcessingMethod", "Name of GPS processing method"));
            this.Add(0x1C, new ExifTag(0x1C, "GPSAreaInformation", "Name of GPS area"));
        }
    }

}
